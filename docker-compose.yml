services:
  localstack:
    image: localstack/localstack:latest
    container_name: localstack-principal
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - SERVICES=ecs,ec2,iam,logs,ecr
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "localstack_data:/tmp/localstack"
    networks:
      - app-network
      - shared-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: mysql-principal
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: servico_principal
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: unless-stopped

  servico-principal:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: servico-principal
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=servico_principal
      - DB_USER=root
      - DB_PASSWORD=root123
      - origins=*
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - JWT_SECRET=seu_jwt_secret_super_seguro_para_producao
      - JWT_EXPIRES_IN=24h
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
      - ECS_CLUSTER_NAME=servico-principal-cluster
    depends_on:
      mysql:
        condition: service_healthy
      localstack:
        condition: service_started
    networks:
      - app-network
      - shared-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      timeout: 30s
      interval: 30s
      retries: 3
      start_period: 40s

volumes:
  mysql_data:
    driver: local
  localstack_data:
    driver: local

networks:
  app-network:
    driver: bridge
  shared-network:
    external: true
    name: carros-fiap-network
